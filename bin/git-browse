#!/bin/bash

action=''
remote_name=origin

while [ $# != 0 ]; do
    case $1 in
        -r)
            [[ $# -lt 2 ]] && echo "Error: No remote name" && exit 1
            remote_name="$2"
            shift
        ;;

        *)
            if [[ -n "$action" ]]; then
                echo "Only one action is required."
                exit 1
            fi
            action="$1"
        ;;
    esac
    shift
done

if ! git rev-parse 1>/dev/null 2>&1; then
    echo "ERROR: This isnt a git directory"
    exit 1
fi

git_url="$(git config --get "remote.${remote_name}.url")"
git_url=${git_url%.git}

git_protocol="$(echo "$git_url" | awk -v FS="(@|:)" '{print $1}')"
if [[ "$git_protocol" == 'http' ]] || [[ "$git_protocol" == 'https' ]]; then
    git_domain="$(echo "$git_url" | awk -F'/' '{print $3}')"
    git_url="$git_url"
elif [[ $git_protocol == 'git' ]]; then
    git_url="${git_url#*@}"
    git_domain="$(echo "$git_url" | awk -F':' '{print $1}')"
    git_url="https://${git_url/:/\/}"
elif [[ "$git_protocol" == 'github' ]] || [[ "$git_protocol" == 'gitlab' ]]; then
    git_domain="${git_protocol}.com"
    git_url="https://${git_protocol}.com/${git_url#*:}"
else
    echo "ERROR: Remote $remote_name is invalid"
    exit 1
fi

url="${git_url}"

git_branch="$(git rev-parse --abbrev-ref HEAD 2> /dev/null)" || git_branch=''

print_help () {
    echo -n '''
Usage: git (browse|go) ([|home] | [-|current] | [b|branches] | [c|commits] | [h|help] | [i|issues] | [r|releases] | [s|settings] | [t|tags] | [w|wiki] | [repo-settings])
''' | tail +2
}

case "$action" in
    '') action='home' ;;
    '-') action='current' ;;
    b) action='branches' ;;
    c) action='commits' ;;
    h) action='help' ;;
    i) action='issues' ;;
    r) action='releases' ;;
    s) action='settings' ;;
    t) action='tags' ;;
    w) action='wiki' ;;
esac

case "$action" in
    'help') print_help; exit 0 ;;
    'home') url="$url" ;;
    'branches') url="$url/branches" ;;
    'issues') url="$url/issues" ;;
    'releases') url="$url/releases" ;;
    'tags') url="$url/tags" ;;
    'repo-settings') url="$url/settings/repository" ;;

    'commits')
        if [[ -z "$git_branch" ]]; then
            echo "Error: No branch"
            exit 1
        fi
        url="$url/commits/${git_branch}"
    ;;

    'current')
        if [[ -z "$git_branch" ]]; then
            echo "Error: No branch"
            exit 1
        fi
        url="$url/tree/${git_branch}"
    ;;

    'wiki')
        if [[ "$git_domain" == 'gitlab.com' ]]; then
            url="$url/wikis"
        else
            url="$url/wiki"
        fi
    ;;

    'settings')
        if [[ "$git_domain" == 'gitlab.com' ]]; then
            url="$url/edit"
        else
            url="$url/settings"
        fi
    ;;

    *)
        echo "ERROR: Unknown action $action"
        print_help
        exit 1
    ;;
esac

echo "Opening URL: $url"
open-url "$url"
