#!/bin/sh

safe_link () {
    local interactive='true'
    local verbose='false'

    while [ $# != 0 ]; do
        case "$1" in
            --no-interactive|-f) interactive='false' ;;
            --interactive|-i)    interactive='true' ;;
            --verbose|-v)        verbose='true' ;;

            *) break ;;
        esac

        shift
    done

    if [ $# != 2 ]; then
        echo "ERROR: from and to arguments must be provided. Arguments: $@"
        return 1
    fi

    local from="$(echo "$1" | sed 's|/\+$||g')" # right strip slashes
    local to="$2"

    if [ -z "$from" ] || [ -z "$to" ]; then
        echo "ERROR: Empty path. from: '$from'. to: '$to'."
        return 1
    fi

    if [ "$from" = "$to" ]; then
        echo "ERROR: '$from' == '$to'."
        return 1
    fi

    if [ -e "$from" ] && [ "$(readlink "$from")" = "$to" ]; then
        if [ "$verbose" = 'true' ]; then
            echo "Up to date: '$from' -> '$to'."
        fi

        return 0
    fi

    local response
    if [ "$interactive" = 'true' ]; then
        printf "Link '%s' -> '%s'? ([y]/n) " "$from" "$to"
        read -r response
    else
        response='y'
    fi

    if [ "$response" != 'n' ]; then
        if [ -e "$from" ]; then
            mv -v "$from" "${from}.bak.$(date -u +"%Y%m%d%H%M%S")"
        fi

        local dir="$(dirname "$from")"
        if [ ! -d "$dir" ]; then
            mkdir -pv "$dir"
        fi

        ln -sfv "$to" "$from"
    fi
}

if [ "$#" -gt 0 ]; then
    set -eu

    safe_link "$@"
fi
