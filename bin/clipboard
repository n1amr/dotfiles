#!/bin/bash

source ~/.dotfiles.env

append=''
append_lines=''
no_new_line=''
pipe_input=''
pipe_output=''

main() {
    parse_args "$@"

    if [[ -n "$pipe_input" ]]; then
        new_content="$(get_new_content)"
        echo -n "$new_content" | copy
    fi

    paste | cat
}

IS_MACOS="${DOTFILES_CONFIG_IS_MACOS:false}"
FILE_MODE="${DOTFILES_CONFIG_CLIPBOARD_FILE_ONLY_MODE:-auto}"

if [[ "$FILE_MODE" == 'false' ]] || [[ "$FILE_MODE" == 'auto' ]]; then
    if [[ "$IS_MACOS" == 'true' ]] && ( which pbcopy && pbpaste ) > /dev/null 2>&1; then
        copy  () { pbcopy; }
        paste () { pbpaste; }
        FILE_MODE='false'
    elif ( which xsel && xsel -ob ) > /dev/null 2>&1; then
        copy  () { xsel -ib; }
        paste () { xsel -ob; }
        FILE_MODE='false'
    elif [[ "$FILE_MODE" == 'auto' ]]; then
        FILE_MODE='true'
    else
        echo "Unable to find copy command and DOTFILES_CONFIG_CLIPBOARD_FILE_ONLY_MODE is set to false." >&2
        exit 1
    fi
fi

if [[ "$FILE_MODE" == 'true' ]]; then
    CLIPBOARD_FILE="${DOTFILES_CONFIG_CLIPBOARD_FILE:-$DOTFILES_ENV_HOME/.clipboard}"

    if [[ ! -f "$CLIPBOARD_FILE" ]]; then
        mkdir -p "$(dirname "$CLIPBOARD_FILE")"
        touch "$CLIPBOARD_FILE"
    fi

    chown "$DOTFILES_ENV_USER" "$CLIPBOARD_FILE"
    chmod 600 "$CLIPBOARD_FILE"

    copy  () { cat > "$CLIPBOARD_FILE"; }
    paste () { cat   "$CLIPBOARD_FILE"; }
fi

parse_args() {
    while [[ $# -gt 0 ]]; do
        case "$1" in
            -a) append='true' ;;
            -l) append='true'; append_lines='true' ;;
            -s) no_new_line='true' ;;
            *)
                echo >&2 "Invalid arguments: $1"
                echo >&2 "Usage: clipboard [-a] [-l] [-s]"
                exit 1
            ;;
        esac
        shift
    done

    [[ ! -t 0 ]] && pipe_input='true'
    [[ ! -t 1 ]] && pipe_output='true'
}

get_new_content() {
    if [[ -n "$append" ]]; then
        echo -n "$(paste)"

        if [[ -n "$append_lines" ]]; then
            echo
        fi
    fi

    echo -n "$(cat)"

    if [[ -z "$no_new_line" ]]; then
        echo
    fi
}

main "$@"
