#!/bin/bash

set -e

source ~/.dotfiles.env
source "$DOTFILES_HOME/bin/lib/log"
source "$DOTFILES_HOME/bin/lib/lock" --verbose

if [ -z "$DOTFILES_CONFIG_YOUTUBE_HOME" ]; then
    echo -n 'Enter youtube home directory: '
    read -r DOTFILES_CONFIG_YOUTUBE_HOME
    echo "export DOTFILES_CONFIG_YOUTUBE_HOME='$DOTFILES_CONFIG_YOUTUBE_HOME'" >> ~/.dotfiles.env
fi

OUTPUT_DIR="$DOTFILES_CONFIG_YOUTUBE_HOME"
CONFIG_DIR="$OUTPUT_DIR/.youtube-dl"
LOCK_FILE="$CONFIG_DIR/lock" && export LOCK_FILE

ARGS=()
ARGS+=(--output-dir "$OUTPUT_DIR")
ARGS+=(--config-dir "$CONFIG_DIR")
ARGS+=(--log)
ARGS+=(--use-cookies)
# ARGS+=(--no-subs)
ARGS+=(--output-template '%(title)s - (@%(uploader)s - %(id)s).%(ext)s')
ARGS+=(--begin-args)
ARGS+=(--exec 'file={}; noext="${file%.*}"; for f in "$noext".*; do mv "$f" "$(dirname "$f")/$(date -u +"%Y%m%d%H%M%S"). $(basename "$f")"; done')
ARGS+=(--end-args)
ARGS+=("$@")
ARGS+=('https://youtube.com/playlist?list=WL')

cleanup () {
    echo 'Exiting'
    [ "$has_lock" = true ] && release_lock "$LOCK_FILE"
}

has_lock='false'
trap 'cleanup' EXIT INT
acquire_lock "$LOCK_FILE" && has_lock=true || exit 1

"$DOTFILES_HOME/bin/youtube-dl-playlist" "${ARGS[@]}"
